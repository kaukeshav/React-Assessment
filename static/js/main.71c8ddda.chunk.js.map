{"version":3,"sources":["components/Modal.js","components/AddButton.js","components/TodoItem.js","components/Todos.js","components/Tabs.js","App.js","index.js"],"names":["Modal","state","title","description","priority","dueDate","currentState","createdAt","uniqueId","editTodo","onEsc","e","target","keyCode","props","length","closeEditModal","closeTodo","checkOutsideClick","closest","show","getStyles","display","generateUid","Math","random","toString","substr","handleChange","name","setState","value","window","addEventListener","this","removeEventListener","confirm","timeStamp","Date","getTime","requestAnimationFrame","createNewTodo","saveEditedTodo","handleEditTodo","id","className","style","onClick","bind","type","minLength","maxLength","placeholder","onChange","onEditTodo","rows","cols","defaultValue","disabled","editExistingTodo","saveTodo","Component","AddButton","toggleModal","TodoItem","getCompletedStyles","todo","getDateString","date","parseInt","toDateString","toLocaleTimeString","getPriority","priorityText","isNaN","todoAction","Todos","Fragment","todoList","map","key","handleTodo","Tabs","activeTab","getStyleClass","onTabClick","sortByConfig","App","activeSortBy","isModalActive","todos","tempTodoList","searchTerm","tableHeadings","openCloseModal","tabDetail","temp","JSON","parse","stringify","filter","toLowerCase","trim","match","searchTodos","highLightText","todoTitle","document","querySelectorAll","Array","from","forEach","text","innerText","startIndex","indexOf","endIndex","innerHTML","substring","createTodo","editedTodo","getHeaderStyles","todoDetail","sortBy","orderBy","sortByName","replace","order","sort","todoOne","todoTwo","toUpperCase","$self","heading","sortTodos","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.71c8ddda.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Modal extends Component {\n  state = {\n    title: '',\n    description: '',\n    priority: '',\n    dueDate: '',\n    currentState: false,\n    createdAt: null,\n    uniqueId: '',\n    editTodo: {}\n  };\n\n  componentDidMount() {\n    window.addEventListener('click', this.checkOutsideClick);\n    window.addEventListener('keydown', this.onEsc);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.checkOutsideClick);\n    window.removeEventListener('keydown', this.onEsc);\n  }\n\n  onEsc = e => {\n    if (e.target && e.keyCode === 27) {\n      this.props.editTodo.length ? this.closeEditModal(e) : this.closeTodo(e);\n    }\n  };\n\n  checkOutsideClick = e => {\n    if (\n      !e.target.closest('.edit-btn') &&\n      !e.target.closest('.modal-content') &&\n      this.props.show &&\n      !e.target.closest('.fixed-button')\n    ) {\n      this.props.editTodo.length ? this.closeEditModal(e) : this.closeTodo(e);\n    }\n  };\n\n  getStyles = () => {\n    return {\n      display: this.props.show ? 'block' : 'none'\n    };\n  };\n\n  generateUid = () => {\n    return (\n      Math.random()\n        .toString(36)\n        .substr(2, 9) +\n      '-' +\n      Math.random()\n        .toString(36)\n        .substr(2, 9)\n    );\n  };\n\n  handleChange = e => {\n    if (e.target && e.target.name) {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n\n  closeTodo(e) {\n    if (e) {\n      this.setState({\n        title: '',\n        description: '',\n        priority: '',\n        dueDate: '',\n        currentState: false,\n        createdAt: null,\n        uniqueId: ''\n      });\n      this.props.closeTodo();\n    }\n  }\n\n  saveTodo(e) {\n    if (e && e.target) {\n      const confrimCheck = window.confirm(\n        'Are you sure you want to create this todo'\n      );\n      if (confrimCheck) {\n        const timeStamp = `${new Date().getTime()}`;\n        const uniqueId = this.setState({\n          createdAt: timeStamp,\n          uniqueId: this.generateUid()\n        });\n        window.requestAnimationFrame(() => {\n          this.props.createNewTodo(this.state);\n          this.setState({\n            title: '',\n            description: '',\n            priority: '',\n            dueDate: '',\n            currentState: false,\n            createdAt: null,\n            uniqueId: ''\n          });\n        });\n      }\n    }\n  }\n\n  editExistingTodo(e) {\n    if (e && e.target) {\n      const confrimCheck = window.confirm(\n        'Are you sure you update the exisiting todo item ?'\n      );\n      if (confrimCheck) {\n        this.props.saveEditedTodo(e);\n      }\n    }\n  }\n\n  closeEditModal(e) {\n    if (e && e.target) {\n      this.props.closeEditModal(e);\n    }\n  }\n\n  onEditTodo(e) {\n    if (e) {\n      this.props.handleEditTodo({ name: e.target.name, value: e.target.value });\n    }\n  }\n\n  render() {\n    const editTodo = this.props.editTodo.length ? this.props.editTodo[0] : null;\n    return (\n      <div id=\"myModal\" className=\"modal\" style={this.getStyles()}>\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <span\n              className=\"close\"\n              onClick={\n                editTodo\n                  ? this.closeEditModal.bind(this)\n                  : this.closeTodo.bind(this)\n              }\n            >\n              &times;\n            </span>\n            <h2>Add Todo</h2>\n          </div>\n          <div className=\"modal-body\">\n            <form>\n              <div>\n                <label>Todo Title:</label>\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  value={\n                    editTodo && editTodo.title\n                      ? editTodo.title\n                      : this.state.title\n                  }\n                  minLength=\"10\"\n                  maxLength=\"100\"\n                  placeholder=\"Enter title here...\"\n                  onChange={\n                    editTodo ? this.onEditTodo.bind(this) : this.handleChange\n                  }\n                />\n              </div>\n              <div>\n                <label>Todo Desciption:</label>\n                <textarea\n                  value={\n                    editTodo && editTodo.description\n                      ? editTodo.description\n                      : this.state.description\n                  }\n                  rows=\"20\"\n                  cols=\"30\"\n                  name=\"description\"\n                  placeholder=\"Enter description\"\n                  onChange={\n                    editTodo ? this.onEditTodo.bind(this) : this.handleChange\n                  }\n                ></textarea>\n              </div>\n              <div className=\"dropdown-date\">\n                <div>\n                  <span>Select Priority:</span>\n                  <select\n                    name=\"priority\"\n                    id=\"priority\"\n                    onChange={\n                      editTodo ? this.onEditTodo.bind(this) : this.handleChange\n                    }\n                    value={\n                      editTodo && editTodo.priority\n                        ? editTodo.priority\n                        : this.state.priority\n                    }\n                  >\n                    <option value=\"0\" defaultValue disabled>\n                      None\n                    </option>\n                    <option value=\"1\">Low</option>\n                    <option value=\"2\">Medium</option>\n                    <option value=\"3\">High</option>\n                  </select>\n                </div>\n                <div className=\"date\">\n                  <span>Select Date:</span>\n                  <input\n                    type=\"date\"\n                    id=\"start\"\n                    name=\"dueDate\"\n                    onChange={\n                      editTodo ? this.onEditTodo.bind(this) : this.handleChange\n                    }\n                    value={\n                      editTodo && editTodo.dueDate\n                        ? editTodo.dueDate\n                        : this.state.dueDate\n                    }\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div className=\"modal-footer\">\n            <div className=\"flex-row\">\n              <button\n                className=\"btn save-btn\"\n                onClick={\n                  editTodo\n                    ? this.editExistingTodo.bind(this)\n                    : this.saveTodo.bind(this)\n                }\n              >\n                Save\n              </button>\n              <button\n                className=\"btn cancel-btn\"\n                onClick={\n                  editTodo\n                    ? this.closeEditModal.bind(this)\n                    : this.closeTodo.bind(this)\n                }\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from 'react';\n\nclass AddButton extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"add-button\">\n        <button onClick={this.props.toggleModal}>\n          <span>&#43;</span>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default AddButton;\n","import React, { Component } from 'react';\n\nclass TodoItem extends Component {\n  state = {};\n\n  getCompletedStyles = () => {\n    return this.props.todo.currentState ? 'completed' : '';\n  };\n\n  getDateString = date => {\n    return `${new Date(parseInt(date)).toDateString()}${new Date(\n      parseInt(date)\n    ).toLocaleTimeString()}`;\n  };\n\n  getPriority = priority => {\n    let priorityText = '';\n    const priorityNo = isNaN(parseInt(priority)) ? '' : parseInt(priority);\n    switch (priorityNo) {\n      case 1:\n        priorityText = 'Low';\n        break;\n      case 2:\n        priorityText = 'Medium';\n        break;\n      case 3:\n        priorityText = 'High';\n        break;\n      default:\n        priorityText = 'None';\n        break;\n    }\n    return priorityText;\n  };\n\n  render() {\n    const {\n      title,\n      priority,\n      createdAt,\n      dueDate,\n      uniqueId,\n      currentState\n    } = this.props.todo;\n    return (\n      <div className={'todo-item ' + this.getCompletedStyles()}>\n        <div className=\"todo-section\">\n          <h3 className=\"todo-label\">Summary</h3>\n          <div className=\"todo-title main-title\">{title}</div>\n        </div>\n        <div className=\"todo-section\">\n          <h3 className=\"todo-label\">Priority</h3>\n          <div className=\"todo-title\">{this.getPriority(priority)}</div>\n        </div>\n        <div className=\"todo-section\">\n          <h3 className=\"todo-label\">Created On</h3>\n          <div className=\"todo-title\">{this.getDateString(createdAt)}</div>\n        </div>\n        <div className=\"todo-section\">\n          <h3 className=\"todo-label\">Due Date</h3>\n          <div className=\"todo-title\">{dueDate}</div>\n        </div>\n        <div className=\"todo-section\">\n          <h3 className=\"todo-label\">Actions</h3>\n          <div className=\"todo-title\">\n            <button\n              className=\"btn btn-rounded edit-btn\"\n              onClick={this.props.todoAction.bind(this, {\n                type: 'edit',\n                uniqueId\n              })}\n            >\n              &#9998;\n            </button>\n            <button\n              className=\"btn btn-rounded delete-btn\"\n              onClick={this.props.todoAction.bind(this, {\n                type: 'delete',\n                uniqueId\n              })}\n            >\n              &#9986;\n            </button>\n            <button\n              className=\"btn btn-rounded open-close-btn\"\n              onClick={this.props.todoAction.bind(this, {\n                type: 'complete',\n                uniqueId\n              })}\n            >\n              &#10003;\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\n\nclass Todos extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.todoList.map(todo => (\n          <TodoItem\n            todo={todo}\n            key={todo.uniqueId}\n            todoAction={this.props.handleTodo}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Todos;\n","import React, { Component } from 'react';\n\nclass Tabs extends Component {\n  state = {\n    activeTab: ''\n  };\n\n  getStyleClass = type => {\n    const clickedTab = this.props.activeTab || '';\n    if (clickedTab === type) {\n      return 'active';\n    }\n    return '';\n  };\n\n  render() {\n    return (\n      <div className=\"tabs-wrapper\">\n        <h4>Group By:</h4>\n        <div className=\"tabs\">\n          <button\n            className={'tab btn ' + this.getStyleClass('all')}\n            onClick={this.props.onTabClick.bind(this, {\n              type: 'all'\n            })}\n          >\n            All Tasks\n          </button>\n          <button\n            className={'tab btn ' + this.getStyleClass('completed')}\n            onClick={this.props.onTabClick.bind(this, {\n              type: 'completed'\n            })}\n          >\n            Completed\n          </button>\n          <button\n            className={'tab btn ' + this.getStyleClass('pending')}\n            onClick={this.props.onTabClick.bind(this, {\n              type: 'pending'\n            })}\n          >\n            Pending\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Modal from './components/Modal';\nimport AddButton from './components/AddButton';\nimport Todos from './components/Todos';\nimport Tabs from './components/Tabs';\n\nconst sortByConfig = {\n  SUMMARY: 'summary',\n  PRIORITY: 'priority',\n  CREATED_ON: 'createdon',\n  DUE_DATE: 'duedate',\n  DEFAULT_ORDER: 'ASC'\n};\n\nexport default class App extends Component {\n  state = {\n    activeSortBy: '',\n    isModalActive: false,\n    todos: [],\n    tempTodoList: [],\n    activeTab: '',\n    searchTerm: '',\n    editTodo: [],\n    tableHeadings: [\n      {\n        id: 1,\n        name: 'Summary'\n      },\n      {\n        id: 2,\n        name: 'Priority'\n      },\n      {\n        id: 3,\n        name: 'Created On'\n      },\n      {\n        id: 4,\n        name: 'Due Date'\n      }\n    ]\n  };\n\n  sortTodos(sortBy) {\n    if (sortBy.name && sortBy.orderBy) {\n      const sortByName = sortBy.name.toLowerCase().replace(/ /g, '');\n      const order = sortBy.orderBy;\n      this.setState({\n        todos: [\n          ...this.state.todos.sort((todoOne, todoTwo) => {\n            switch (sortByName) {\n              case sortByConfig.SUMMARY:\n                if (todoOne.title.toUpperCase() < todoTwo.title.toUpperCase()) {\n                  return order === sortByConfig.DEFAULT_ORDER ? -1 : 1;\n                }\n                if (todoOne.title.toUpperCase() > todoTwo.title.toUpperCase()) {\n                  return order === sortByConfig.DEFAULT_ORDER ? 1 : -1;\n                } else {\n                  return 0;\n                }\n                break;\n              case sortByConfig.PRIORITY:\n                if (order === sortByConfig.DEFAULT_ORDER) {\n                  return (\n                    parseInt(todoOne.priority) - parseInt(todoTwo.priority)\n                  );\n                } else {\n                  return (\n                    parseInt(todoTwo.priority) - parseInt(todoOne.priority)\n                  );\n                }\n                break;\n              case sortByConfig.CREATED_ON:\n                if (order === sortByConfig.DEFAULT_ORDER) {\n                  return (\n                    parseInt(todoOne.createdAt) - parseInt(todoTwo.createdAt)\n                  );\n                } else {\n                  return (\n                    parseInt(todoTwo.createdAt) - parseInt(todoOne.createdAt)\n                  );\n                }\n                break;\n              case sortByConfig.DUE_DATE:\n                if (order === sortByConfig.DEFAULT_ORDER) {\n                  return (\n                    new Date(todoOne.dueDate).getTime() -\n                    new Date(todoTwo.dueDate).getTime()\n                  );\n                } else {\n                  return (\n                    new Date(todoTwo.dueDate).getTime() -\n                    new Date(todoOne.dueDate).getTime()\n                  );\n                }\n                break;\n              default:\n                break;\n            }\n          })\n        ],\n        activeSortBy: sortBy.name\n      });\n    }\n  }\n\n  openCloseModal = e => {\n    this.setState({\n      isModalActive: !this.state.isModalActive\n    });\n  };\n\n  onTabClick = tabDetail => {\n    const { type } = tabDetail;\n    const searchTerm = this.state.searchTerm;\n    const temp = JSON.parse(JSON.stringify(this.state.tempTodoList));\n    switch (type) {\n      case 'all':\n        this.setState({\n          todos: [...temp],\n          activeTab: type\n        });\n        break;\n      case 'completed':\n        this.setState({\n          todos: [\n            ...temp.filter(todo => {\n              if (!searchTerm) {\n                return todo.currentState;\n              } else if (\n                (searchTerm &&\n                  todo.title\n                    .toLowerCase()\n                    .trim()\n                    .match(searchTerm)) ||\n                (searchTerm &&\n                  todo.description\n                    .toLowerCase()\n                    .trim()\n                    .match(searchTerm))\n              ) {\n                return todo.currentState;\n              } else {\n                return false;\n              }\n            })\n          ],\n          activeTab: type\n        });\n        break;\n      case 'pending':\n        this.setState({\n          todos: [\n            ...temp.filter(todo => {\n              if (!searchTerm) {\n                return !todo.currentState;\n              } else if (\n                (searchTerm &&\n                  todo.title\n                    .toLowerCase()\n                    .trim()\n                    .match(searchTerm)) ||\n                (searchTerm &&\n                  todo.description\n                    .toLowerCase()\n                    .trim()\n                    .match(searchTerm))\n              ) {\n                return !todo.currentState;\n              } else {\n                return false;\n              }\n            })\n          ],\n          activeTab: type\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  searchTodos = e => {\n    const searchTerm = e.target.value.toLowerCase();\n    const temp = JSON.parse(JSON.stringify(this.state.tempTodoList));\n    const type = this.state.activeTab;\n    this.setState({\n      todos: [\n        ...temp.filter(todo => {\n          if (\n            todo.title\n              .toLowerCase()\n              .trim()\n              .match(searchTerm) ||\n            todo.description\n              .toLowerCase()\n              .trim()\n              .match(searchTerm)\n          ) {\n            if (type === 'completed') {\n              return todo.currentState;\n            } else if (type === 'pending') {\n              return !todo.currentState;\n            } else {\n              // all tasks\n              return true;\n            }\n          }\n          return false;\n        })\n      ],\n      searchTerm: searchTerm\n    });\n    this.highLightText(e.target.value);\n  };\n\n  highLightText = searchTerm => {\n    const todoTitle = document.querySelectorAll('.main-title');\n    Array.from(todoTitle).forEach(title => {\n      const text = title.innerText;\n      if (text.match(searchTerm)) {\n        const startIndex = text.indexOf(searchTerm);\n        const endIndex = text.indexOf(searchTerm) + searchTerm.length;\n        if (startIndex !== -1 && endIndex !== -1) {\n          title.innerHTML = `${text.substring(\n            0,\n            startIndex\n          )}<mark>${text.substring(\n            startIndex,\n            endIndex\n          )}</mark>${text.substring(endIndex, text.length)}`;\n        }\n      }\n    });\n  };\n\n  createTodo = todo => {\n    this.setState({\n      todos: [...this.state.todos, todo],\n      tempTodoList: [...this.state.tempTodoList, todo]\n    });\n    //close modal after creating\n    this.openCloseModal();\n  };\n\n  handleEditTodo = todo => {\n    this.setState({\n      editTodo: [\n        {\n          ...this.state.editTodo[0],\n          [todo.name]: todo.value\n        }\n      ]\n    });\n  };\n\n  closeEditModal = e => {\n    if (e) {\n      this.openCloseModal();\n      this.setState({\n        editTodo: []\n      });\n    }\n  };\n\n  saveEditedTodo = e => {\n    if (e) {\n      this.openCloseModal();\n      const editedTodo = this.state.editTodo.length\n        ? this.state.editTodo[0]\n        : '';\n      this.setState({\n        todos: [\n          ...this.state.todos.map(todo => {\n            if (todo.uniqueId === editedTodo.uniqueId) {\n              todo = editedTodo;\n            }\n            return todo;\n          })\n        ],\n        tempTodoList: [\n          ...this.state.tempTodoList.map(todo => {\n            if (todo.uniqueId === editedTodo.uniqueId) {\n              todo = editedTodo;\n            }\n            return todo;\n          })\n        ],\n        editTodo: []\n      });\n    }\n  };\n\n  getHeaderStyles = name => {\n    return name === this.state.activeSortBy ? 'active' : '';\n  };\n\n  handleTodo = todoDetail => {\n    if (todoDetail.type && todoDetail.uniqueId) {\n      const { type, uniqueId } = todoDetail;\n      const temp = JSON.parse(JSON.stringify(this.state.tempTodoList));\n      switch (type) {\n        case 'edit':\n          this.setState({\n            editTodo: temp.filter(todo => todo.uniqueId === uniqueId)\n          });\n          //open modal\n          this.openCloseModal();\n          break;\n        case 'delete':\n          this.setState({\n            todos: this.state.todos.filter(todo => todo.uniqueId !== uniqueId),\n            tempTodoList: temp.filter(todo => todo.uniqueId !== uniqueId)\n          });\n          break;\n        case 'complete':\n          this.setState({\n            todos: this.state.todos.map(todo => {\n              if (todo.uniqueId === uniqueId) {\n                todo.currentState = !todo.currentState;\n              }\n              return todo;\n            }),\n            tempTodoList: temp.map(todo => {\n              if (todo.uniqueId === uniqueId) {\n                todo.currentState = !todo.currentState;\n              }\n              return todo;\n            })\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  render() {\n    const $self = this;\n    return (\n      <div className=\"app\">\n        <div className=\"page-loader\">\n          <div className=\"loader\">Loading...</div>\n        </div>\n\n        <header className=\"app-header\">\n          <div className=\"container\">\n            <h1>My Todo Application</h1>\n          </div>\n        </header>\n        <div className=\"container\">\n          <div className=\"search-box\">\n            <span>Enter title or description - </span>\n            <input\n              type=\"text\"\n              name=\"search\"\n              placeholder=\"Search...\"\n              onChange={this.searchTodos}\n            />\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <Tabs onTabClick={this.onTabClick} activeTab={this.state.activeTab} />\n        </div>\n\n        <div className=\"container\">\n          <div className=\"sorting-head\">\n            {this.state.tableHeadings.map(heading => (\n              <div\n                className={'sorting-el ' + this.getHeaderStyles(heading.name)}\n                key={heading.id}\n              >\n                {heading.name}\n                <div>\n                  <div\n                    onClick={this.sortTodos.bind($self, {\n                      name: heading.name,\n                      orderBy: 'ASC'\n                    })}\n                  >\n                    &#8593;\n                  </div>\n                  <div\n                    onClick={this.sortTodos.bind($self, {\n                      name: heading.name,\n                      orderBy: 'DSC'\n                    })}\n                  >\n                    &#8595;\n                  </div>\n                </div>\n              </div>\n            ))}\n            {/* No Sorting on this heading */}\n            <div className=\"sorting-el\">Actions</div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <Todos todoList={this.state.todos} handleTodo={this.handleTodo} />\n        </div>\n\n        <Modal\n          show={this.state.isModalActive}\n          createNewTodo={this.createTodo}\n          closeTodo={this.openCloseModal}\n          handleEditTodo={this.handleEditTodo}\n          editTodo={this.state.editTodo}\n          saveEditedTodo={this.saveEditedTodo}\n          closeEditModal={this.closeEditModal}\n        />\n\n        <div className=\"fixed-button\">\n          <AddButton toggleModal={this.openCloseModal} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}